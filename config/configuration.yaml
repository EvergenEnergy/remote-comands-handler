mqtt_settings:
  host: mosquitto
  port: 1883
  command_topic: "commands/#" # The mqtt topic that contains the relevant commands.

modbus_settings:
  host: pymodbus-pymodbus
  port: 5020

modbus_mapping:
  ## name        - the variable name
  ## byte_order  - the ordering of bytes
  ##  |---AB, ABCD   - Big Endian
  ##  |---BA, DCBA   - Little Endian
  ##  |---BADC       - Mid-Big Endian
  ##  |---CDAB       - Mid-Little Endian
  ## data_type   - INT8L, INT8H, UINT8L, UINT8H (low and high byte variants)
  ##               INT16, UINT16, INT32, UINT32, INT64, UINT64,
  ##               FLOAT16-IEEE, FLOAT32-IEEE, FLOAT64-IEEE (IEEE 754 binary representation)
  ##               FLOAT32, FIXED, UFIXED (fixed-point representation on input)
  ## scale       - the final numeric variable representation
  ## address     - variable address
  holding_registers:
    - name: "evgBatteryMode"
      byte_order: "AB" # Fill this in
      data_type: "INT16" # Fill this in
      scale: 1.0 # Fill this in
      address: [0] # Fill this in with actual Modbus register address for evgBatteryMode
    
    - name: "evgBatteryTargetPowerWatts"
      byte_order: "AB" # Fill this in
      data_type: "INT16" # Fill this in
      scale: 1.0 # Fill this in
      address: [1] # Fill this in with actual Modbus register address for evgBatteryTargetPowerWatts

    - name: "evgBatteryTargetSOCPercent"
      byte_order: "AB" # Fill this in
      data_type: "INT16" # Fill this in
      scale: 1.0 # Fill this in
      address: [2] # Fill this in with actual Modbus register address for evgBatteryTargetSOCPercent

  coils:
    - name: "evgBatteryModeCoil" # Assuming 'evgBatteryMode' is also represented as a coil
      address: [3] # Fill this in with actual Modbus register address for the coil

    - name: "evgBatteryTargetPowerWattsCoil" # Assuming 'evgBatteryTargetPowerWatts' is also represented as a coil
      address: [4] # Fill this in with actual Modbus register address for the coil

    - name: "evgBatteryTargetSOCPercentCoil" # Assuming 'evgBatteryTargetSOCPercent' is also represented as a coil
      address: [5] # Fill this in with actual Modbus register address for the coil
