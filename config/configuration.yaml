---
site_settings:
  site_name: localsite
  serial_number: SERIAL_123
mqtt_settings:
  host: mosquitto
  port: 1883
  command_topic: commands/#  # We subscribe to this MQTT topic to receive commands
  error_topic: errors  # If non-empty, publish error messages under this topic
modbus_settings:
  host: pymodbus
  port: 5020
modbus_mapping:
  ## Configuration for Holding Registers
  ##
  ## Each holding register can hold a numeric value represented by a name and address.
  ## Each register must be configured with the correct data type, endianness and scale factor
  ## consistent with the input data that will be stored in it.
  ##
  ## The configuration settings are:
  ## name        - the variable name
  ## byte_order  - the ordering of bytes
  ##  |---AB, ABCD   - Big Endian
  ##  |---BA, DCBA   - Little Endian
  ##  |---BADC       - Mid-Big Endian
  ##  |---CDAB       - Mid-Little Endian
  ## data_type   - INT8L, INT8H, UINT8L, UINT8H (low and high byte variants)
  ##               INT16, UINT16, INT32, UINT32, INT64, UINT64,
  ##               FLOAT16-IEEE, FLOAT32-IEEE, FLOAT64-IEEE (IEEE 754 binary representation)
  ##               FLOAT32, FIXED, UFIXED (fixed-point representation on input)
  ## scale       - the final numeric variable representation
  ## address     - variable address
  ##
  ## The following are given as examples. Replace with your own values.
  holding_registers:
    - name: evgBatteryTargetPowerWatts
      byte_order: AB
      data_type: INT16
      scale: 1.0
      address: [1]
    - name: evgBatteryTargetSOCPercent
      byte_order: AB
      data_type: INT16
      scale: 1.0
      address: [2]
    - name: testRegister
      byte_order: AB
      data_type: INT16
      scale: 1.0
      address: [1]
    - name: testFloatRegister
      byte_order: AB
      data_type: FLOAT32-IEEE
      scale: 1.0
      address: [2]
    - name: testFloat64Register
      byte_order: AB
      data_type: FLOAT64-IEEE
      scale: 1.0
      address: [3]
    - name: testInt64Register
      byte_order: AB
      data_type: INT64
      scale: 1.0
      address: [20]
    - name: testUInt64Register
      byte_order: AB
      data_type: UINT64
      scale: 1.0
      address: [30]
  ## Configuration for Coils
  ##
  ## Coils hold boolean values and accept any of the following forms:
  ## True   - boolean True, integer 1, or strings '1', 'on', 't', 'true', 'y', 'yes'
  ## False  - boolean False, integer 0, or strings '0', 'off', 'f', 'false', 'n', 'no'
  ##
  ## The following are given as examples. Replace with your own values.
  coils:
    - name: activePowerMode
      address: [501]
    - name: reactivePowerMode
      address: [502]
